# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-06-10 04:14
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvailableMarkets',
            fields=[
                ('avail_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('market_type', models.CharField(default='NA', max_length=16)),
                ('market', models.CharField(default='NA', max_length=100)),
                ('prediction', models.CharField(choices=[('1', 'Home win'), ('2', 'Away win'), ('X', 'Draw'), ('CANC', 'Match cancelled'), ('PEND', 'Pending'), ('POST', 'Match Postponed')], default='PEND', max_length=6)),
                ('date_created', models.DateTimeField()),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('last_updated',),
                'db_table': 'avail_markets',
            },
        ),
        migrations.CreateModel(
            name='federationLookUp',
            fields=[
                ('fed_id', models.PositiveIntegerField(editable=False, primary_key=True, serialize=False)),
                ('fed_name', models.CharField(max_length=30)),
                ('region', models.CharField(max_length=28)),
                ('country', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'fed_lookup',
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('leag_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('league_name', models.CharField(max_length=30)),
                ('division', models.CharField(max_length=30, null=True)),
                ('country_name', models.CharField(max_length=30, unique=True)),
                ('country_iso', models.CharField(max_length=6)),
                ('federation_name', models.CharField(max_length=55)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('league_name', 'federation_name'),
                'db_table': 'leagues',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(null=True)),
                ('finish_time', models.DateTimeField(null=True)),
                ('venue', models.CharField(max_length=50, null=True)),
                ('source_api', models.CharField(max_length=25, null=True)),
                ('results', models.CharField(choices=[('CORR', 'Correct prediction'), ('INCO', 'Incorrect prediction'), ('PEND', 'Results pending'), ('NRES', 'No results')], default='PEND', max_length=6)),
                ('score', models.CharField(blank=True, default='0:0', max_length=6, null=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('start_time', 'last_updated'),
                'db_table': 'match',
            },
        ),
        migrations.CreateModel(
            name='MatchSets',
            fields=[
                ('set_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('ticket_outcome', models.CharField(choices=[('1', 'Won'), ('0', 'Lost'), ('PEND', 'Pending')], default='PEND', max_length=4)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('sms_sent', models.CharField(default='N', max_length=1)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'match_sets',
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=25, null=True)),
                ('cell_num', models.CharField(blank=True, max_length=12, null=True)),
                ('reg_date', models.DateField(auto_now_add=True)),
                ('channel_id', models.CharField(blank=True, choices=[('M', 'Mobi site'), ('APP', 'Smart App'), ('DESKTOP', 'Desktop computer')], max_length=8, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('reg_date',),
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_descr', models.CharField(default='Plan A', max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('alloc_sets', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 'subscr_plan',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('team_cd', models.CharField(max_length=8)),
                ('team_name', models.CharField(max_length=32)),
                ('played', models.PositiveIntegerField(default=0)),
                ('won', models.PositiveIntegerField(default=0)),
                ('draw', models.PositiveIntegerField(default=0)),
                ('lost', models.PositiveIntegerField(default=0)),
                ('points', models.PositiveIntegerField(default=0)),
                ('goal_diff', models.IntegerField(default=12)),
                ('league_position', models.PositiveIntegerField(default=0)),
                ('lst_five_games', models.CharField(default='W', max_length=6)),
                ('lst_five_home', models.CharField(default='W', max_length=6)),
                ('lst_five_away', models.CharField(default='W', max_length=6)),
                ('season', models.CharField(default='2018-19', max_length=16)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='leagues.League')),
            ],
            options={
                'ordering': ('points', 'team_cd', 'played'),
                'db_table': 'team',
            },
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_sets', models.IntegerField(default=1)),
                ('eff_from', models.DateTimeField(auto_now_add=True)),
                ('eff_to', models.DateTimeField(default=datetime.datetime(2020, 6, 9, 4, 14, 34, 580000, tzinfo=utc))),
                ('plan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='leagues.SubscriptionPlan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userplan', to='leagues.Subscriber')),
            ],
            options={
                'ordering': ('eff_from',),
                'db_table': 'userplan',
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marketing_opt', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('sms_opt', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('email_opt', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='N', max_length=1)),
                ('leagues', models.ManyToManyField(related_name='_userpreferences_leagues_+', to='leagues.League')),
                ('subscriber', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='leagues.Subscriber')),
            ],
            options={
                'db_table': 'user_preferences',
            },
        ),
        migrations.AddField(
            model_name='match',
            name='away_team',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='leagues.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='home_team',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='leagues.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='leagues.League'),
        ),
        migrations.AddField(
            model_name='match',
            name='match_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='leagues.MatchSets'),
        ),
        migrations.AddField(
            model_name='availablemarkets',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_markets', to='leagues.Match'),
        ),
    ]
