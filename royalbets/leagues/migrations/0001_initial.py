# Generated by Django 3.0.7 on 2020-07-10 14:32

import datetime
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('iso', models.CharField(blank=True, max_length=12, null=True)),
                ('federation_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'countries',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='federationLookUp',
            fields=[
                ('fed_id', models.PositiveIntegerField(editable=False, primary_key=True, serialize=False)),
                ('fed_name', models.CharField(max_length=30)),
                ('region', models.CharField(max_length=28)),
                ('country', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'fed_lookup',
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('leag_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('league_name', models.CharField(max_length=40)),
                ('league_cd', models.CharField(default='', max_length=24)),
                ('league_api_id', models.PositiveIntegerField(null=True, unique=True)),
                ('league_type', models.CharField(max_length=12, null=True)),
                ('logo_path', models.CharField(max_length=70, null=True)),
                ('is_cup', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('country', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='leagues.Country')),
            ],
            options={
                'db_table': 'leagues',
                'ordering': ('league_name',),
            },
        ),
        migrations.CreateModel(
            name='MarketCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=16, null=True)),
                ('code', models.PositiveSmallIntegerField()),
                ('market', models.CharField(default='', max_length=16)),
                ('descr', models.CharField(default='', max_length=25)),
            ],
            options={
                'db_table': 'marketcodes',
            },
        ),
        migrations.CreateModel(
            name='MatchSet',
            fields=[
                ('set_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('ticket_outcome', models.CharField(choices=[('1', 'Won'), ('0', 'Lost'), ('PEND', 'Pending')], default='PEND', max_length=4)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('sms_sent', models.CharField(default='N', max_length=1)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'match_sets',
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=25, null=True)),
                ('cell_num', models.CharField(blank=True, max_length=12, null=True)),
                ('reg_date', models.DateField(auto_now_add=True)),
                ('channel_id', models.CharField(blank=True, choices=[('M', 'Mobi'), ('APP', 'App'), ('DESKTOP', 'Desktop')], max_length=8, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'subscriber',
                'ordering': ('-reg_date',),
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_descr', models.CharField(choices=[('Free Plan', 'Free Plan'), ('Basic Plan', 'Basic Plan'), ('Professional Plan', 'Professional Plan'), ('Expert Advisor', 'Expert Advisor')], default='Free Plan', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=4)),
                ('max_alloc_sets', models.PositiveSmallIntegerField(default=8)),
                ('max_allowed_notif', models.PositiveSmallIntegerField(default=8)),
            ],
            options={
                'db_table': 'subscr_plan',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=32)),
                ('team_cd', models.CharField(max_length=8)),
                ('played', models.PositiveSmallIntegerField(default=0)),
                ('won', models.PositiveSmallIntegerField(default=0)),
                ('draw', models.PositiveSmallIntegerField(default=0)),
                ('lost', models.PositiveSmallIntegerField(default=0)),
                ('points', models.PositiveSmallIntegerField(default=0)),
                ('goal_diff', models.PositiveSmallIntegerField(default=12)),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('season', models.CharField(default='2018-19', max_length=16)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='leagues.League')),
            ],
            options={
                'db_table': 'team',
                'ordering': ('-points', 'name'),
            },
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curr_num_sets', models.IntegerField(default=1, editable=False)),
                ('eff_from', models.DateTimeField(auto_now_add=True)),
                ('eff_to', models.DateTimeField(default=datetime.datetime(2021, 7, 10, 14, 32, 31, 531177, tzinfo=utc))),
                ('plan', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='leagues.SubscriptionPlan')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userplan', to='leagues.Subscriber')),
            ],
            options={
                'db_table': 'userplan',
                'ordering': ('-eff_from',),
            },
        ),
        migrations.CreateModel(
            name='TeamStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lst_five_games', django.contrib.postgres.fields.jsonb.JSONField()),
                ('lst_five_home', django.contrib.postgres.fields.jsonb.JSONField()),
                ('lst_five_away', django.contrib.postgres.fields.jsonb.JSONField()),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statitics', to='leagues.Team')),
            ],
            options={
                'db_table': 'team_stats',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateField(null=True)),
                ('finish_time', models.DateField(null=True)),
                ('venue', models.CharField(max_length=50, null=True)),
                ('source_api', models.CharField(max_length=25, null=True)),
                ('results', models.CharField(choices=[('CORR', 'Correct prediction'), ('INCO', 'Incorrect prediction'), ('PEND', 'Results pending'), ('NRES', 'No results')], default='PEND', max_length=6)),
                ('score', models.CharField(blank=True, default='0-0', max_length=5, null=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('away_team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='leagues.Team')),
                ('home_team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='leagues.Team')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='leagues.League')),
                ('match_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='leagues.MatchSet')),
            ],
            options={
                'db_table': 'match',
                'ordering': ('start_time', 'last_updated'),
            },
        ),
        migrations.CreateModel(
            name='AvailableMarket',
            fields=[
                ('avail_id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('applicable_subscr_plans', django.contrib.postgres.fields.jsonb.JSONField()),
                ('markets', django.contrib.postgres.fields.jsonb.JSONField()),
                ('prediction', models.CharField(choices=[('1', 'Home win'), ('2', 'Away win'), ('X', 'Draw'), ('CANC', 'Match cancelled'), ('PEND', 'Pending'), ('POST', 'Match postponed')], default='PEND', max_length=6)),
                ('date_created', models.DateTimeField()),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_markets', to='leagues.League')),
                ('market_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='leagues.MarketCode')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='available_markets', to='leagues.Match')),
            ],
            options={
                'db_table': 'avail_markets',
                'ordering': ('last_updated',),
            },
        ),
    ]
